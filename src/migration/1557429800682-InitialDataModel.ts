import {MigrationInterface, QueryRunner} from "typeorm";

export class InitialDataModel1557429800682 implements MigrationInterface {

    public async up(queryRunner: QueryRunner): Promise<any> {
        await queryRunner.query(`CREATE TABLE "role" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, CONSTRAINT "role__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "node_schema_version" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "node_schema_id" uuid NOT NULL, "version" integer NOT NULL, "name" text NOT NULL, "type" text NOT NULL DEFAULT 'custom', "is_published" boolean NOT NULL DEFAULT false, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, "modified_by" integer NOT NULL, CONSTRAINT "node_schema_version__node_schema_id__version__uq" UNIQUE ("node_schema_id", "version"), CONSTRAINT "node_schema_version__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "node_schema" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "organization_id" integer NOT NULL, "published_version_id" uuid, "is_deleted" boolean NOT NULL DEFAULT false, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, "modified_by" integer NOT NULL, CONSTRAINT "REL_cd70309952ddba67f02b7289b8" UNIQUE ("published_version_id"), CONSTRAINT "node_schema__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "organization" ("id" SERIAL NOT NULL, "name" text NOT NULL, "is_auto_join" boolean NOT NULL DEFAULT false, "domain_name" text, "is_deleted" boolean NOT NULL DEFAULT false, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer, "modified_by" integer, CONSTRAINT "organization__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "organization__is_auto_join__name__idx" ON "organization" ("name", "is_auto_join") `);
        await queryRunner.query(`CREATE TABLE "organization_invite" ("id" SERIAL NOT NULL, "email" citext NOT NULL, "permission" text NOT NULL, "created" TIMESTAMP NOT NULL DEFAULT now(), "organization_id" integer NOT NULL, "created_by" integer NOT NULL, CONSTRAINT "organization_invite__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "organization_invite__email__organization_id__idx" ON "organization_invite" ("organization_id", "email") `);
        await queryRunner.query(`CREATE TABLE "user_organization" ("id" SERIAL NOT NULL, "permission" text NOT NULL, "created" TIMESTAMP NOT NULL DEFAULT now(), "user_id" integer NOT NULL, "organization_invite_id" integer, "organization_id" integer NOT NULL, "created_by" integer NOT NULL, CONSTRAINT "user_organization__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "user_organization__organization_id__user_id__idx" ON "user_organization" ("user_id", "organization_id") `);
        await queryRunner.query(`CREATE TABLE "user" ("id" SERIAL NOT NULL, "email" citext NOT NULL, "password" character varying(256) NOT NULL, "first_name" text NOT NULL, "last_name" text NOT NULL, "verified" boolean NOT NULL DEFAULT false, "deleted" boolean NOT NULL DEFAULT false, "created" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer, "modified" TIMESTAMP NOT NULL DEFAULT now(), "modified_by" integer, "active_organization_id" integer, CONSTRAINT "user__email__uq" UNIQUE ("email"), CONSTRAINT "user__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "attribute" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "node_schema_version_id" uuid NOT NULL, "name" text NOT NULL, "label" text NOT NULL, "type" text NOT NULL, "position" integer NOT NULL DEFAULT 0, "options" jsonb, "referenced_node_schema_version_id" uuid, "reference_type" text, "is_required" boolean NOT NULL DEFAULT false, "is_deleted" boolean NOT NULL DEFAULT false, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, "modified_by" integer NOT NULL, CONSTRAINT "attribute__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "node" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "node_schema_version_id" uuid NOT NULL, "reference_user_id" integer, "is_deleted" boolean NOT NULL DEFAULT false, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, "modified_by" integer NOT NULL, CONSTRAINT "node__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "attribute_value" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "node_id" uuid NOT NULL, "attribute_id" uuid, "text_value" text, "number_value" numeric(15,5), "date_value" date, "time_value" TIME, "json_value" jsonb, "reference_node_id" uuid, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, "modified_by" integer NOT NULL, CONSTRAINT "attribute_value__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "attribute_value_log" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "attribute_value_id" uuid, "text_value" text, "number_value" numeric(15,5), "date_value" date, "time_value" TIME, "json_value" jsonb, "reference_node_id" uuid, "created" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, CONSTRAINT "attribute_value_log__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "node_snapshot" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "node_id" uuid NOT NULL, "node_schema_version_id" uuid NOT NULL, "attribute_values" jsonb NOT NULL, "is_deleted" boolean NOT NULL DEFAULT false, "created" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, CONSTRAINT "node_snapshot__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "organization_domain_blacklist" ("id" SERIAL NOT NULL, "domain_name" text NOT NULL, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer, "modified_by" integer, CONSTRAINT "organization_domain_blacklist__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "organization_domain_blacklist__domain_name__idx" ON "organization_domain_blacklist" ("domain_name") `);
        await queryRunner.query(`CREATE TABLE "query" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "organization_id" integer NOT NULL, "name" text NOT NULL, "select" jsonb, "sql" text, "is_deleted" boolean NOT NULL DEFAULT false, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, "modified_by" integer NOT NULL, CONSTRAINT "query__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "view_template" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "organization_id" integer NOT NULL, "published_version_id" uuid, "is_deleted" boolean NOT NULL DEFAULT false, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, "modified_by" integer NOT NULL, CONSTRAINT "REL_d5d98fc326da5fa028d59cadfe" UNIQUE ("published_version_id"), CONSTRAINT "view_template__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "view_template_version" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "view_template_id" uuid NOT NULL, "version" integer NOT NULL, "name" text NOT NULL, "template_url" text, "is_published" boolean NOT NULL DEFAULT false, "node_schema_version_id" uuid, "created" TIMESTAMP NOT NULL DEFAULT now(), "modified" TIMESTAMP NOT NULL DEFAULT now(), "created_by" integer NOT NULL, "modified_by" integer NOT NULL, CONSTRAINT "view_template_version__version__view_template_id__uq" UNIQUE ("view_template_id", "version"), CONSTRAINT "view_template_version__id__pk" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_role" ("user_id" integer NOT NULL, "role_id" integer NOT NULL, CONSTRAINT "user_role__role_id__user_id__pk" PRIMARY KEY ("user_id", "role_id"))`);
        await queryRunner.query(`CREATE INDEX "user_role__user_id__idx" ON "user_role" ("user_id") `);
        await queryRunner.query(`CREATE INDEX "user_role__role_id__idx" ON "user_role" ("role_id") `);
        await queryRunner.query(`ALTER TABLE "node_schema_version" ADD CONSTRAINT "node_schema_version__node_schema_id__fk" FOREIGN KEY ("node_schema_id") REFERENCES "node_schema"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node_schema_version" ADD CONSTRAINT "node_schema_version__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node_schema_version" ADD CONSTRAINT "node_schema_version__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node_schema" ADD CONSTRAINT "node_schema__organization_id__fk" FOREIGN KEY ("organization_id") REFERENCES "organization"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node_schema" ADD CONSTRAINT "node_schema__published_version_id__fk" FOREIGN KEY ("published_version_id") REFERENCES "node_schema_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node_schema" ADD CONSTRAINT "node_schema__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node_schema" ADD CONSTRAINT "node_schema__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization" ADD CONSTRAINT "organization__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization" ADD CONSTRAINT "organization__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization_invite" ADD CONSTRAINT "organization_invite__organization_id__fk" FOREIGN KEY ("organization_id") REFERENCES "organization"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization_invite" ADD CONSTRAINT "organization_invite__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_organization" ADD CONSTRAINT "user_organization__user_id__fk" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_organization" ADD CONSTRAINT "user_organization__organization_invite_id__fk" FOREIGN KEY ("organization_invite_id") REFERENCES "organization_invite"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_organization" ADD CONSTRAINT "user_organization__organization_id__fk" FOREIGN KEY ("organization_id") REFERENCES "organization"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_organization" ADD CONSTRAINT "user_organization__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "user__active_organization_id__fk" FOREIGN KEY ("active_organization_id") REFERENCES "organization"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute" ADD CONSTRAINT "attribute__node_schema_version_id__fk" FOREIGN KEY ("node_schema_version_id") REFERENCES "node_schema_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute" ADD CONSTRAINT "attribute__referenced_node_schema_version_id__fk" FOREIGN KEY ("referenced_node_schema_version_id") REFERENCES "node_schema_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute" ADD CONSTRAINT "attribute__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute" ADD CONSTRAINT "attribute__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node" ADD CONSTRAINT "node__node_schema_version_id__fk" FOREIGN KEY ("node_schema_version_id") REFERENCES "node_schema_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node" ADD CONSTRAINT "node__reference_user_id__fk" FOREIGN KEY ("reference_user_id") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node" ADD CONSTRAINT "node__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node" ADD CONSTRAINT "node__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute_value" ADD CONSTRAINT "attribute_value__node_id__fk" FOREIGN KEY ("node_id") REFERENCES "node"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute_value" ADD CONSTRAINT "attribute_value__attribute_id__fk" FOREIGN KEY ("attribute_id") REFERENCES "attribute"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute_value" ADD CONSTRAINT "attribute_value__reference_node_id__fk" FOREIGN KEY ("reference_node_id") REFERENCES "node"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute_value" ADD CONSTRAINT "attribute_value__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute_value" ADD CONSTRAINT "attribute_value__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute_value_log" ADD CONSTRAINT "attribute_value_log__attribute_value_id__fk" FOREIGN KEY ("attribute_value_id") REFERENCES "attribute_value"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute_value_log" ADD CONSTRAINT "attribute_value_log__reference_node_id__fk" FOREIGN KEY ("reference_node_id") REFERENCES "node"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "attribute_value_log" ADD CONSTRAINT "attribute_value_log__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node_snapshot" ADD CONSTRAINT "node_snapshot__node_id__fk" FOREIGN KEY ("node_id") REFERENCES "node"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node_snapshot" ADD CONSTRAINT "node_snapshot__node_schema_version_id__fk" FOREIGN KEY ("node_schema_version_id") REFERENCES "node_schema_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "node_snapshot" ADD CONSTRAINT "node_snapshot__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization_domain_blacklist" ADD CONSTRAINT "organization_domain_blacklist__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization_domain_blacklist" ADD CONSTRAINT "organization_domain_blacklist__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "query" ADD CONSTRAINT "query__organization_id__fk" FOREIGN KEY ("organization_id") REFERENCES "organization"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "query" ADD CONSTRAINT "query__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "query" ADD CONSTRAINT "query__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "view_template" ADD CONSTRAINT "view_template__organization_id__fk" FOREIGN KEY ("organization_id") REFERENCES "organization"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "view_template" ADD CONSTRAINT "view_template__published_version_id__fk" FOREIGN KEY ("published_version_id") REFERENCES "view_template_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "view_template" ADD CONSTRAINT "view_template__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "view_template" ADD CONSTRAINT "view_template__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "view_template_version" ADD CONSTRAINT "view_template_version__view_template_id__fk" FOREIGN KEY ("view_template_id") REFERENCES "view_template"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "view_template_version" ADD CONSTRAINT "view_template_version__node_schema_version_id__fk" FOREIGN KEY ("node_schema_version_id") REFERENCES "node_schema_version"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "view_template_version" ADD CONSTRAINT "view_template_version__created_by__fk" FOREIGN KEY ("created_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "view_template_version" ADD CONSTRAINT "view_template_version__modified_by__fk" FOREIGN KEY ("modified_by") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_role" ADD CONSTRAINT "user_role__user_id__fk" FOREIGN KEY ("user_id") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_role" ADD CONSTRAINT "user_role__role_id__fk" FOREIGN KEY ("role_id") REFERENCES "role"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<any> {
        await queryRunner.query(`ALTER TABLE "user_role" DROP CONSTRAINT "user_role__role_id__fk"`);
        await queryRunner.query(`ALTER TABLE "user_role" DROP CONSTRAINT "user_role__user_id__fk"`);
        await queryRunner.query(`ALTER TABLE "view_template_version" DROP CONSTRAINT "view_template_version__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "view_template_version" DROP CONSTRAINT "view_template_version__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "view_template_version" DROP CONSTRAINT "view_template_version__node_schema_version_id__fk"`);
        await queryRunner.query(`ALTER TABLE "view_template_version" DROP CONSTRAINT "view_template_version__view_template_id__fk"`);
        await queryRunner.query(`ALTER TABLE "view_template" DROP CONSTRAINT "view_template__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "view_template" DROP CONSTRAINT "view_template__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "view_template" DROP CONSTRAINT "view_template__published_version_id__fk"`);
        await queryRunner.query(`ALTER TABLE "view_template" DROP CONSTRAINT "view_template__organization_id__fk"`);
        await queryRunner.query(`ALTER TABLE "query" DROP CONSTRAINT "query__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "query" DROP CONSTRAINT "query__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "query" DROP CONSTRAINT "query__organization_id__fk"`);
        await queryRunner.query(`ALTER TABLE "organization_domain_blacklist" DROP CONSTRAINT "organization_domain_blacklist__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "organization_domain_blacklist" DROP CONSTRAINT "organization_domain_blacklist__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "node_snapshot" DROP CONSTRAINT "node_snapshot__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "node_snapshot" DROP CONSTRAINT "node_snapshot__node_schema_version_id__fk"`);
        await queryRunner.query(`ALTER TABLE "node_snapshot" DROP CONSTRAINT "node_snapshot__node_id__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute_value_log" DROP CONSTRAINT "attribute_value_log__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute_value_log" DROP CONSTRAINT "attribute_value_log__reference_node_id__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute_value_log" DROP CONSTRAINT "attribute_value_log__attribute_value_id__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute_value" DROP CONSTRAINT "attribute_value__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute_value" DROP CONSTRAINT "attribute_value__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute_value" DROP CONSTRAINT "attribute_value__reference_node_id__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute_value" DROP CONSTRAINT "attribute_value__attribute_id__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute_value" DROP CONSTRAINT "attribute_value__node_id__fk"`);
        await queryRunner.query(`ALTER TABLE "node" DROP CONSTRAINT "node__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "node" DROP CONSTRAINT "node__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "node" DROP CONSTRAINT "node__reference_user_id__fk"`);
        await queryRunner.query(`ALTER TABLE "node" DROP CONSTRAINT "node__node_schema_version_id__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP CONSTRAINT "attribute__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP CONSTRAINT "attribute__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP CONSTRAINT "attribute__referenced_node_schema_version_id__fk"`);
        await queryRunner.query(`ALTER TABLE "attribute" DROP CONSTRAINT "attribute__node_schema_version_id__fk"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "user__active_organization_id__fk"`);
        await queryRunner.query(`ALTER TABLE "user_organization" DROP CONSTRAINT "user_organization__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "user_organization" DROP CONSTRAINT "user_organization__organization_id__fk"`);
        await queryRunner.query(`ALTER TABLE "user_organization" DROP CONSTRAINT "user_organization__organization_invite_id__fk"`);
        await queryRunner.query(`ALTER TABLE "user_organization" DROP CONSTRAINT "user_organization__user_id__fk"`);
        await queryRunner.query(`ALTER TABLE "organization_invite" DROP CONSTRAINT "organization_invite__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "organization_invite" DROP CONSTRAINT "organization_invite__organization_id__fk"`);
        await queryRunner.query(`ALTER TABLE "organization" DROP CONSTRAINT "organization__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "organization" DROP CONSTRAINT "organization__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "node_schema" DROP CONSTRAINT "node_schema__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "node_schema" DROP CONSTRAINT "node_schema__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "node_schema" DROP CONSTRAINT "node_schema__published_version_id__fk"`);
        await queryRunner.query(`ALTER TABLE "node_schema" DROP CONSTRAINT "node_schema__organization_id__fk"`);
        await queryRunner.query(`ALTER TABLE "node_schema_version" DROP CONSTRAINT "node_schema_version__modified_by__fk"`);
        await queryRunner.query(`ALTER TABLE "node_schema_version" DROP CONSTRAINT "node_schema_version__created_by__fk"`);
        await queryRunner.query(`ALTER TABLE "node_schema_version" DROP CONSTRAINT "node_schema_version__node_schema_id__fk"`);
        await queryRunner.query(`DROP INDEX "user_role__role_id__idx"`);
        await queryRunner.query(`DROP INDEX "user_role__user_id__idx"`);
        await queryRunner.query(`DROP TABLE "user_role"`);
        await queryRunner.query(`DROP TABLE "view_template_version"`);
        await queryRunner.query(`DROP TABLE "view_template"`);
        await queryRunner.query(`DROP TABLE "query"`);
        await queryRunner.query(`DROP INDEX "organization_domain_blacklist__domain_name__idx"`);
        await queryRunner.query(`DROP TABLE "organization_domain_blacklist"`);
        await queryRunner.query(`DROP TABLE "node_snapshot"`);
        await queryRunner.query(`DROP TABLE "attribute_value_log"`);
        await queryRunner.query(`DROP TABLE "attribute_value"`);
        await queryRunner.query(`DROP TABLE "node"`);
        await queryRunner.query(`DROP TABLE "attribute"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP INDEX "user_organization__organization_id__user_id__idx"`);
        await queryRunner.query(`DROP TABLE "user_organization"`);
        await queryRunner.query(`DROP INDEX "organization_invite__email__organization_id__idx"`);
        await queryRunner.query(`DROP TABLE "organization_invite"`);
        await queryRunner.query(`DROP INDEX "organization__is_auto_join__name__idx"`);
        await queryRunner.query(`DROP TABLE "organization"`);
        await queryRunner.query(`DROP TABLE "node_schema"`);
        await queryRunner.query(`DROP TABLE "node_schema_version"`);
        await queryRunner.query(`DROP TABLE "role"`);
    }

}
